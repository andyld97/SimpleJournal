<Application x:Class="SimpleJournal.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml"
             Startup="Application_Startup">
    <Application.Resources>
        <ResourceDictionary>

            <Color x:Key="Item.SidebarBackgroundColor" />

            <Style x:Key="_ListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Name="_Border" Padding="2" BorderThickness="1" SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="_Border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.GalleryItem.MouseOver}"/>
                                    <Setter TargetName="_Border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
                                    <Setter TargetName="_Border" Property="CornerRadius" Value="2" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="_Border" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource Fluent.Ribbon.Colors.AccentColor60}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="_Border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
                                    <Setter TargetName="_Border" Property="CornerRadius" Value="2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
            <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
            <Style x:Key="ListBoxSelectionHoldActiveContainerStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="4,1"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="buttonWithoutSelection" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Rectangle x:Name="background"
                                   Fill="{TemplateBinding Background}"/>
                                    <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="background" Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Fluent;Component/Themes/Generic.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/Fluent;Component/Themes/Accents/Cobalt.xaml" /> --> 
               <!-- <ResourceDictionary Source="pack://application:,,,/Fluent;Component/Themes/Colors/BaseDark.xaml" /> -->
                
                <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SimpleJournal"
                    xmlns:controls="clr-namespace:SimpleJournal.Controls"
                    xmlns:fluent="clr-namespace:Fluent;assembly=Fluent"
                    >

                    <Style x:Key="stl" TargetType="{x:Type controls:DropDownToggleButton}" BasedOn="{StaticResource ResourceKey=RibbonDropDownButtonStyle}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type controls:DropDownToggleButton}">
                                    <ControlTemplate.Resources>
                                        <Style BasedOn="{StaticResource MenuSeparatorStyle}"
                   TargetType="{x:Type Separator}" />
                                    </ControlTemplate.Resources>
                                    <Grid>
                                        <Border x:Name="PART_ButtonBorder"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"                    
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                    Height="Auto">
                                            <StackPanel x:Name="stackPanel"
                            Margin="{TemplateBinding Padding}"
                            Width="Auto"
                            Orientation="Vertical">
                                                <ContentPresenter x:Name="iconImage"
                                      HorizontalAlignment="Center"
                                      Height="32"
                                      VerticalAlignment="Center"
                                      Width="32"
                                      Margin="0 2 0 0"
                                      SnapsToDevicePixels="True"
                                      Content="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <fluent:TwoLineLabel x:Name="controlLabel"
                                         Text="{TemplateBinding Header}"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"
                                         Margin="2 0 2 2"
                                         HasGlyph="{TemplateBinding HasTriangle}" />
                                            </StackPanel>
                                        </Border>
                                        <Popup x:Name="PART_Popup"
                   Placement="Bottom"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   AllowsTransparency="True"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Margin="0,0,-4,0"
                   VerticalAlignment="Top"
                   Grid.ColumnSpan="2">
                                            <Grid Name="DropDown"
                      SnapsToDevicePixels="True"
                      Margin="0"
                      VerticalAlignment="Top">
                                                <Border x:Name="PART_DropDownBorder"
                            MinWidth="{TemplateBinding ActualWidth}"
                            SnapsToDevicePixels="True"
                            Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}"
                            BorderThickness="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top">
                                                    <Grid Width="Auto"
                              Height="Auto"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Top">
                                                        <Border VerticalAlignment="Top"
                                    Width="Auto"
                                    Height="Auto"
                                    BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                                    BorderThickness="1" />
                                                        <Grid Margin="1"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Top">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*" />
                                                                <RowDefinition Height="Auto" />
                                                            </Grid.RowDefinitions>
                                                            <ScrollViewer x:Name="PART_ScrollViewer"
                                              Style="{DynamicResource MenuScrollViewer}"
                                              IsTabStop="False"
                                              Margin="1"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                              SnapsToDevicePixels="True"
                                              VerticalScrollBarVisibility="Auto"
                                              HorizontalScrollBarVisibility="Hidden">
                                                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Local" />
                                                            </ScrollViewer>
                                                            <Border x:Name="resizeBorder"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top"
                                        Height="11"
                                        BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}"
                                        BorderThickness="0,1,0,0"
                                        Grid.Row="1"
                                        Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgroundBrush}">
                                                                <Grid>
                                                                    <Thumb x:Name="PART_ResizeVerticalThumb"
                                               HorizontalAlignment="Stretch"
                                               Margin="0,0,0,-90"
                                               Width="Auto"
                                               Height="10"
                                               VerticalAlignment="Top"
                                               Cursor="SizeNS"
                                               Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                                                                    <Thumb x:Name="PART_ResizeBothThumb"
                                               HorizontalAlignment="Right"
                                               Margin="0,0,0,-90"
                                               Width="10"
                                               Height="10"
                                               VerticalAlignment="Top"
                                               Cursor="SizeNWSE"
                                               Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                                                                </Grid>
                                                            </Border>
                                                        </Grid>
                                                    </Grid>
                                                </Border>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ResizeMode"
                     Value="None">
                                            <Setter Property="Visibility"
                        TargetName="resizeBorder"
                        Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="ResizeMode"
                     Value="Both">
                                            <Setter Property="Visibility"
                        TargetName="PART_ResizeVerticalThumb"
                        Value="Collapsed" />
                                            <Setter Property="Visibility"
                        TargetName="PART_ResizeBothThumb"
                        Value="Visible" />
                                            <Setter Property="Visibility"
                        TargetName="resizeBorder"
                        Value="Visible" />
                                        </Trigger>
                                        <Trigger Property="ResizeMode"
                     Value="Vertical">
                                            <Setter Property="Visibility"
                        TargetName="PART_ResizeBothThumb"
                        Value="Collapsed" />
                                            <Setter Property="Visibility"
                        TargetName="PART_ResizeVerticalThumb"
                        Value="Visible" />
                                            <Setter Property="Visibility"
                        TargetName="resizeBorder"
                        Value="Visible" />
                                        </Trigger>
                                        <Trigger Property="Size"
                     Value="Small">
                                            <Setter Property="Orientation"
                        TargetName="stackPanel"
                        Value="Horizontal" />
                                            <Setter Property="Content"
                        TargetName="iconImage">
                                                <Setter.Value>
                                                    <Image Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"></Image>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="HasTwoLines"
                        TargetName="controlLabel"
                        Value="False" />
                                            <Setter Property="Text"
                        TargetName="controlLabel"
                        Value="" />
                                            <Setter Property="Width"
                        TargetName="iconImage"
                        Value="16" />
                                            <Setter Property="Height"
                        TargetName="iconImage"
                        Value="16" />
                                            <Setter Property="Margin"
                        TargetName="iconImage"
                        Value="2,0,0,0" />
                                            <Setter Property="Margin"
                        TargetName="controlLabel"
                        Value="-2,0,2,1" />
                                            <Setter Property="Width"
                        TargetName="controlLabel"
                        Value="10" />
                                            <Setter Property="VerticalAlignment"
                        TargetName="controlLabel"
                        Value="Center" />
                                        </Trigger>
                                        <Trigger Property="Size"
                     Value="Middle">
                                            <Setter Property="Orientation"
                        TargetName="stackPanel"
                        Value="Horizontal" />
                                            <Setter Property="Content"
                        TargetName="iconImage">
                                                <Setter.Value>
                                                    <Image Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Width"
                        TargetName="stackPanel"
                        Value="Auto" />
                                            <Setter Property="VerticalAlignment"
                        TargetName="iconImage"
                        Value="Center" />
                                            <Setter Property="HasTwoLines"
                        TargetName="controlLabel"
                        Value="False" />
                                            <Setter Property="Margin"
                        TargetName="controlLabel"
                        Value="2,0,2,1" />
                                            <Setter Property="VerticalAlignment"
                        TargetName="PART_ButtonBorder"
                        Value="Stretch" />
                                            <Setter Property="Width"
                        TargetName="iconImage"
                        Value="16" />
                                            <Setter Property="Height"
                        TargetName="iconImage"
                        Value="16" />
                                            <Setter Property="Margin"
                        TargetName="iconImage"
                        Value="2,0,2,0" />
                                            <Setter Property="VerticalAlignment"
                        TargetName="controlLabel"
                        Value="Center" />
                                        </Trigger>
                                        <Trigger Property="IsDropDownOpen"
                     Value="True">
                                            <Setter Property="BorderBrush"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                                            <Setter Property="Background"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled"
                     Value="False">
                                            <Setter Property="Opacity"
                        TargetName="iconImage"
                        Value="0.5" />
                                            <Setter Property="Opacity"
                        TargetName="controlLabel"
                        Value="0.5" />
                                            <Setter Property="Effect"
                        TargetName="iconImage">
                                                <Setter.Value>
                                                    <fluent:GrayscaleEffect />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver"
                               Value="True" />
                                    <Condition Property="IsDropDownOpen"
                               Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                                <Setter Property="BorderBrush"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
                            </MultiTrigger>-->
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
