<fluent:RibbonWindow x:Class="Dialogs.DialogWindowTabbed"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" xmlns:fluent="urn:fluent-ribbon"
        mc:Ignorable="d"
        ShowMinButton="False"
        TitleBarHeight="0"
        ShowMaxRestoreButton="True"        
        WindowStartupLocation="CenterScreen">
    <fluent:RibbonWindow.Resources>
        <Style x:Key="CustomLightMetroWindowButtonCloseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Light}">
            <Setter Property="Background" Value="{DynamicResource TabControl.Background}" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CustomLightMetroWindowButtonMaxStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Light}">
            <Setter Property="Background" Value="{DynamicResource TabControl.Background}" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Accent40}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CustomDarkMetroWindowButtonCloseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Dark}">
            <Setter Property="Background" Value="{DynamicResource TabControl.Background}" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CustomDarkMetroWindowButtonMaxStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Dark}">
            <Setter Property="Background" Value="{DynamicResource TabControl.Background}" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Accent40}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type mah:WindowButtonCommands}" BasedOn="{StaticResource {x:Type mah:WindowButtonCommands}}">
            <!--<Setter Property="LightMinButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonStyle}" />-->
            <Setter Property="LightMaxButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonMaxStyle}" />
            <Setter Property="LightCloseButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonCloseStyle}" />
            <!--<Setter Property="DarkMinButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonStyle}" />-->

            <Setter Property="DarkMaxButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonMaxStyle}" />
            <Setter Property="DarkCloseButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonCloseStyle}" />
        </Style>
    </fluent:RibbonWindow.Resources>


    <Grid>
        <Grid x:Name="GridClosingbutton" MouseDown="GridClosingbutton_MouseDown" Panel.ZIndex="100" HorizontalAlignment="Right" VerticalAlignment="Top" Width="30" Height="30" Background="Transparent" MouseEnter="Grid_MouseEnter" MouseLeave="Grid_MouseLeave">
            <Viewbox Margin="10">
                <Path StrokeThickness="1" Stroke="{DynamicResource Fluent.Ribbon.Brushes.Black}" Data="M0,0 L10,10 M0,10 L10 0" />
            </Viewbox>
        </Grid>

        <Border x:Name="MainBorder" />
    </Grid>
 
</fluent:RibbonWindow>
