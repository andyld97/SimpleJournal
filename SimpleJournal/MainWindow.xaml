<Fluent:RibbonWindow x:Class="SimpleJournal.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SimpleJournal"
        xmlns:Fluent="urn:fluent-ribbon"
        xmlns:res="clr-namespace:SimpleJournal.Properties"
        FlowDirection="LeftToRight"
        xmlns:controls="clr-namespace:SimpleJournal.Controls"
        StateChanged="RibbonWindow_StateChanged"
        mc:Ignorable="d"
        xmlns:gl="clr-namespace:System.Globalization;assembly=mscorlib"
        Title="SimpleJournal - Neues Journal" Height="700" Activated="RibbonWindow_Activated" Deactivated="RibbonWindow_Deactivated"
        Width="1130">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
        <local:SelectedIndexToColumnSpanConverter x:Key="indexToColumn" />
        <local:SelectedIndexToVisiblityConverter x:Key="indexToVisibilty" />
        <local:StringToVisiblityConverter x:Key="stringToVisilbity" />

        <DataTemplate x:Key="RecentlyOpenedDocumentsTemplate">
            <Grid Background="Transparent" Height="40" ToolTip="{Binding Path}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image Source="pack://application:,,,/SimpleJournal;component/resources/journalicon.png" />
                <StackPanel VerticalAlignment="Center" Grid.Column="1" Margin="10,0,0,0">
                    <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="{DynamicResource BlackBrush}" />
                    <TextBlock Foreground="{DynamicResource BlackBrush}">
                        <Run Text="Zuletzt geändert:" />
                        <Run Text="{Binding LastModified, StringFormat=d, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}" />
                        <Run Text="{Binding LastModified, StringFormat=t, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}" />
                    </TextBlock>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding x:Name="NewCommand" Command="ApplicationCommands.New" Executed="NewCommand_Executed" CanExecute="NewCommand_CanExecute" />
        <CommandBinding x:Name="SaveCommand" Command="ApplicationCommands.Save" Executed="SaveCommand_Executed" CanExecute="SaveCommand_CanExecute" />
        <CommandBinding x:Name="UndoCommand" Command="ApplicationCommands.Undo" Executed="UndoCommand_Executed" CanExecute="UndoCommand_CanExecute" />
        <CommandBinding x:Name="RedoCommand" Command="ApplicationCommands.Redo" Executed="RedoCommand_Executed" CanExecute="RedoCommand_CanExecute" />
        <CommandBinding x:Name="PrintCommand" Command="ApplicationCommands.Print" Executed="PrintCommand_Executed" CanExecute="PrintCommand_CanExecute" />
        <CommandBinding x:Name="InsertCommand" Command="ApplicationCommands.Paste" Executed="InsertCommand_Executed" CanExecute="InsertCommand_CanExecute" />
        <CommandBinding x:Name="InsertFromClipboardCommand" Command="local:Commands.InsertFromClipboard" CanExecute="InsertFromClipboardCommand_CanExecute" Executed="InsertFromClipboardCommand_Executed" />
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Fluent:Ribbon x:Name="ribbon" AutomaticStateManagement="True">
            <Fluent:Ribbon.Menu>
                <Grid>
                    <Fluent:ApplicationMenu x:Name="MenuApplication" Visibility="Collapsed" Header="{x:Static res:Resources.strFile}" MaxDropDownHeight="520" BorderBrush="Blue">
                        <Fluent:ApplicationMenu.RightPaneContent>
                            <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Orientation="Vertical" CanVerticallyScroll="True">
                                <Border HorizontalAlignment="Stretch" BorderBrush="#64647F" BorderThickness="0,0,0,0">
                                    <TextBlock Background="{DynamicResource Fluent.Ribbon.Brushes.MenuItem.Background}" Foreground="{DynamicResource BlackBrush}" TextAlignment="Left" Padding="12,4,4,4" FontWeight="SemiBold" FontSize="12">
                                        <Run Text="{x:Static res:Resources.strRecentFiles}" /><Run Text=":" />
                                        <Run x:Name="MenuAppRecentlyOpendedFilesCount" Text="0" />
                                    </TextBlock>
                                </Border>
                                <StackPanel HorizontalAlignment="Stretch" Height="2">
                                    <Border Height="1" BorderThickness="1" HorizontalAlignment="Stretch" BorderBrush="#DCDDDE" />
                                    <Border Height="1" BorderThickness="1" HorizontalAlignment="Stretch" BorderBrush="#FEFEFF" />
                                </StackPanel>
                                <ListBox x:Name="ListRecentlyOpenedDocuments" ItemTemplate="{StaticResource RecentlyOpenedDocumentsTemplate}" ItemContainerStyle="{DynamicResource _ListBoxItemStyle}" Background="Transparent" BorderThickness="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" SelectionChanged="ListRecentlyOpenedDocuments_SelectionChanged" />
                            </StackPanel>
                        </Fluent:ApplicationMenu.RightPaneContent>
                        <Fluent:MenuItem x:Name="btnNew" Command="ApplicationCommands.New" Header="{x:Static res:Resources.strNewDocument}" KeyTip="N" Icon="pack://application:,,,/SimpleJournal;component/resources/add.png"  />
                        <Fluent:MenuItem x:Name="btnOpen" Click="btnOpen_Click" Header="{x:Static res:Resources.strOpenDocument}" KeyTip="O" Icon="pack://application:,,,/SimpleJournal;component/resources/open.png"  />
                        <Fluent:MenuItem x:Name="btnSaveProject" Click="btnSaveProject_Click" Header="{x:Static res:Resources.strSaveDocument}" KeyTip="S" Icon="pack://application:,,,/SimpleJournal;component/resources/save.png"  />
                        <Fluent:MenuItem x:Name="btnSave" Command="ApplicationCommands.Save" Header="{x:Static res:Resources.strSaveAsDocument}" KeyTip="S" Icon="pack://application:,,,/SimpleJournal;component/resources/save.png"  />
                        <Fluent:MenuItem x:Name="btnPrint" Command="ApplicationCommands.Print" Header="{x:Static res:Resources.strPrintDocument}" KeyTip="D" Icon="pack://application:,,,/SimpleJournal;component/resources/print.png"  />
                        <!-- ToDO: Localize-->
                        <Fluent:MenuItem Icon="/resources/print.png" Header="Als PDF exportieren" Click="MenuButtonBackstageExportPdf_Click" />
                        <Fluent:MenuItem x:Name="btnExport" Click="btnExport_Click" Header="{x:Static res:Resources.strExportDocument}" KeyTip="E" Icon="pack://application:,,,/SimpleJournal;component/resources/export.png"  />
                        <Fluent:MenuItem x:Name="btnPageManagment" Click="btnPageManagment_Click" Header="{x:Static res:Resources.strManagePage}" Icon="pack://application:,,,/SimpleJournal;component/resources/editpage.png" />
                        <Fluent:MenuItem x:Name="btnSettings" Click="btnSettings_Click" Header="{x:Static res:Resources.strSettings}" KeyTip="S" Icon="pack://application:,,,/SimpleJournal;component/resources/settings.png"  />
                        <Fluent:MenuItem x:Name="btnAbout" Click="btnAbout_Click" Header="{x:Static res:Resources.strAbout}" KeyTip="A" Icon="pack://application:,,,/SimpleJournal;component/resources/about.png"  />
                        <Fluent:MenuItem x:Name="btnClose" Click="btnExit_Click" Header="{x:Static res:Resources.strClose}" KeyTip="E" Icon="pack://application:,,,/SimpleJournal;component/resources/close.png"  />
                    </Fluent:ApplicationMenu>

                    <Fluent:Backstage x:Name="MenuBackstage" Margin="0,1,0,1" IsOpenChanged="Backstage_IsOpenChanged" BorderBrush="Blue" Background="{DynamicResource Fluent.Ribbon.Brushes.AccentBaseColorBrush}">
                        <Fluent:BackstageTabControl x:Name="MenuBackstageTabControl">
                            <Fluent:BackstageTabItem x:Name="MenuBackstageNewFile" MouseDown="BackstageTabItem_MouseDown" Icon="/resources/add.png" Header="{x:Static res:Resources.strNewDocument}">
                                <GroupBox Margin="10" BorderThickness="0">
                                    <GroupBox.Header>
                                        <TextBlock Foreground="{DynamicResource BlackBrush}">
                                           <Run Text="{x:Static res:Resources.strRecentFiles}" /><Run Text=":" />
                                           <Run x:Name="MenuBackstageRecentlyOpendedFilesCount" Text="0" />
                                        </TextBlock>
                                    </GroupBox.Header>
                                    <ListBox x:Name="RecentlyOpenedDocumentsBackstage" ItemTemplate="{StaticResource RecentlyOpenedDocumentsTemplate}" ItemContainerStyle="{DynamicResource _ListBoxItemStyle}" Background="Transparent" BorderThickness="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" SelectionChanged="RecentlyOpenedDocumentsBackstage_SelectionChanged" />
                                </GroupBox>
                            </Fluent:BackstageTabItem>
                            <Fluent:Button Icon="/resources/open.png" Header="{x:Static res:Resources.strOpenDocument}" Click="btnOpen_Click" />
                            <Fluent:Button Icon="/resources/save.png" Header="{x:Static res:Resources.strSaveDocument}" Click="btnSaveProject_Click"/>
                            <Fluent:Button Icon="/resources/save.png" Header="{x:Static res:Resources.strSaveAsDocument}" Command="ApplicationCommands.Save"  />
                            <Fluent:SeparatorTabItem />
                            <Fluent:Button Icon="/resources/print.png" Header="{x:Static res:Resources.strPrintDocument}" Command="ApplicationCommands.Print" />
                            <Fluent:Button x:Name="MenuButtonBackstageExportPdf" Icon="/resources/print.png" Header="Als PDF exportieren" Click="MenuButtonBackstageExportPdf_Click" />
                            <Fluent:BackstageTabItem x:Name="MenuBackstageExport" Icon="/resources/export.png" Header="{x:Static res:Resources.strExportDocument}" MouseDown="MenuBackstageExport_MouseDown">
                                <DockPanel LastChildFill="True">
                                    <StatusBar DockPanel.Dock="Top" Visibility="{Binding ElementName=TextExportStatus, Path=Text, Converter={StaticResource stringToVisilbity}}" Background="{DynamicResource WhiteBrush20}">
                                        <TextBlock x:Name="TextExportStatus" Padding="2" Foreground="{DynamicResource BlackBrush}" />
                                    </StatusBar>
                                    <controls:ExportControl x:Name="ExportControl" />
                                </DockPanel>
                            </Fluent:BackstageTabItem>
                            <Fluent:BackstageTabItem x:Name="MenuBackstageEditPages" Icon="/resources/editpage.png" Header="{x:Static res:Resources.strManagePage}" MouseDown="MenuBackstageEditPages_MouseDown">
                                <controls:PageManagmentControl x:Name="PageManagementControl" />
                            </Fluent:BackstageTabItem>
                            <Fluent:SeparatorTabItem />
                            <Fluent:Button Icon="/resources/settings.png" Header="{x:Static res:Resources.strSettings}" Click="btnSettings_Click"/>
                            <Fluent:Button Icon="/resources/about.png" Header="{x:Static res:Resources.strAbout}" Click="btnAbout_Click" />
                            <Fluent:Button Icon="/resources/close.png" Header="{x:Static res:Resources.strClose}" Click="btnExit_Click" />
                        </Fluent:BackstageTabControl>
                    </Fluent:Backstage>
                </Grid>
            </Fluent:Ribbon.Menu>
            <Fluent:RibbonTabItem Header="{x:Static res:Resources.strStart}" ReduceOrder="(GroupEdit),(GroupPens),(GroupRubber),(GroupTools),(GroupPages)" KeyTip="ST">
                <Fluent:RibbonTabItem.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Width="50" TextAlignment="Center" />
                    </DataTemplate>
                </Fluent:RibbonTabItem.HeaderTemplate>
                <Fluent:RibbonGroupBox x:Name="GroupEdit" Header="{x:Static res:Resources.strEdit}" KeyTip="B">
                    <controls:FluentToggleButtonRemovedToggle x:Name="btnBack" Command="ApplicationCommands.Undo" Header="{x:Static res:Resources.strBackwards}" ToolTip="{x:Static res:Resources.strBackwardsDescription}" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/undo.png"/>
                    <controls:FluentToggleButtonRemovedToggle x:Name="btnForward" Command="ApplicationCommands.Redo" Header="{x:Static res:Resources.strForward}" ToolTip="{x:Static res:Resources.strForwardDescription}" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/redo.png"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox x:Name="GroupPens" Header="{x:Static res:Resources.strPens}" KeyTip="ST">
                    <controls:DropDownToggleButton x:Name="btnPen1" IsChecked="True" Click="btnPen1_Click" Header="1">
                        <controls:DropDownToggleButton.LargeIcon>
                            <Viewbox Width="32" Height="32">
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="pathPen1" Data="{StaticResource Pen.PathData}"  />
                                </Canvas>
                            </Viewbox>
                        </controls:DropDownToggleButton.LargeIcon>
                    </controls:DropDownToggleButton>
                    <controls:DropDownToggleButton x:Name="btnPen2" Click="btnPen2_Click" Header="2">
                        <controls:DropDownToggleButton.LargeIcon>
                            <Viewbox Width="32" Height="32">
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="pathPen2" Data="{StaticResource Pen.PathData}" />
                                </Canvas>
                            </Viewbox>
                        </controls:DropDownToggleButton.LargeIcon>
                    </controls:DropDownToggleButton>
                    <controls:DropDownToggleButton x:Name="btnPen3" Click="btnPen3_Click" Header="3">
                        <controls:DropDownToggleButton.LargeIcon>
                            <Viewbox Width="32" Height="32">
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="pathPen3" Data="{StaticResource Pen.PathData}" />
                                </Canvas>
                            </Viewbox>
                        </controls:DropDownToggleButton.LargeIcon>
                    </controls:DropDownToggleButton>
                    <controls:DropDownToggleButton x:Name="btnPen4" Click="btnPen4_Click" Header="4">
                        <controls:DropDownToggleButton.LargeIcon>
                            <Viewbox Width="32" Height="32">
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="pathPen4" Data="{StaticResource Pen.PathData}" />
                                </Canvas>
                            </Viewbox>
                        </controls:DropDownToggleButton.LargeIcon>
                    </controls:DropDownToggleButton>
                    <controls:DropDownToggleButton x:Name="btnTextMarker" Click="btnTextMarker_Click" Header="{x:Static res:Resources.strHighlight}" >
                        <controls:DropDownToggleButton.LargeIcon>
                            <Viewbox Width="32" Height="32">
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="markerPath" Data="{StaticResource Marker.PathData}" Fill="Black" />
                                </Canvas>
                            </Viewbox>
                        </controls:DropDownToggleButton.LargeIcon>
                    </controls:DropDownToggleButton>
                    <controls:DropDownToggleButton x:Name="btnRuler" Click="btnRuler_Click" Header="{x:Static res:Resources.strRuler}" ToolTip="{x:Static res:Resources.strRulerDescription}" Width="50">
                        <controls:DropDownToggleButton.LargeIcon>
                            <Viewbox Width="32" Height="32">
                                <Image Source="pack://application:,,,/SimpleJournal;component/resources/ruler.png"/>
                            </Viewbox>
                        </controls:DropDownToggleButton.LargeIcon>
                    </controls:DropDownToggleButton>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox x:Name="GroupTools" Header="{x:Static res:Resources.strTools}" KeyTip="W">
                    <Fluent:ToggleButton x:Name="btnRubberGrob" Click="btnRubberGrob_Click" Header="{x:Static res:Resources.strStrokes}" ToolTip="{x:Static res:Resources.strStrokesDescription}" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/rubber.png"/>
                    <controls:DropDownToggleButton x:Name="btnRubberFine" Click="btnRubberFine_Click" Width="45" Header="{x:Static res:Resources.strFree}" ToolTip="{x:Static res:Resources.strFreeDescription}">
                        <controls:DropDownToggleButton.LargeIcon>
                            <Viewbox Width="32" Height="32">
                                <Image Source="pack://application:,,,/SimpleJournal;component/resources/rubber.png"/>
                            </Viewbox>
                        </controls:DropDownToggleButton.LargeIcon>
                    </controls:DropDownToggleButton>
                    <controls:DropDownToggleButton x:Name="btnSelect" Click="btnSelect_Click" Header="{x:Static res:Resources.strSelect}" ToolTip="{x:Static res:Resources.strSelectDescription}" Width="52">
                        <controls:DropDownToggleButton.LargeIcon>
                            <Viewbox Width="32" Height="32">
                                <Image Source="pack://application:,,,/SimpleJournal;component/resources/selectarea.png"/>
                            </Viewbox>
                        </controls:DropDownToggleButton.LargeIcon>
                    </controls:DropDownToggleButton>
                    <Fluent:Button x:Name="btnRemoveSelectedStrokes" Click="btnRemoveSelectedStrokes_Click" SizeDefinition="Middle,Small" ToolTip="{x:Static res:Resources.strRemoveDescription}" Header="{x:Static res:Resources.strRemove}" Icon="pack://application:,,,/SimpleJournal;component/resources/delete.png"/>
                    <Fluent:Button x:Name="btnCopy" Click="BtnCopy_Click_1" SizeDefinition="Middle,Small" Header="{x:Static res:Resources.strCopy}" ToolTip="{x:Static res:Resources.strCopyDescription}" Icon="pack://application:,,,/SimpleJournal;component/resources/copy.png"/>
                    <Fluent:Button x:Name="btnPaste" Click="BtnPaste_Click_1" SizeDefinition="Middle,Small" Header="{x:Static res:Resources.strPaste}" ToolTip="{x:Static res:Resources.strPasteDescription}" Icon="pack://application:,,,/SimpleJournal;component/resources/paste.png"/>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox x:Name="GroupForms" Header="{x:Static res:Resources.strShapesHeader}">
                    <controls:DropDownToggleButton x:Name="btnInsertSimpleForm" Click="btnInsertSimpleForm_Click_1" Header="{x:Static res:Resources.strToolFormFixed}" ToolTip="{x:Static res:Resources.strInsertSimpleFormToolTip}" Width="52">
                        <controls:DropDownToggleButton.LargeIcon>
                            <Viewbox Width="32" Height="32">
                                <Image Source="pack://application:,,,/SimpleJournal;component/resources/shapes.png"/>
                            </Viewbox>
                        </controls:DropDownToggleButton.LargeIcon>
                    </controls:DropDownToggleButton>
                    <Fluent:ToggleButton x:Name="btnRecogniziation" Click="btnRecogniziation_Click" Header="{x:Static res:Resources.strToolFormFree}" ToolTip="{x:Static res:Resources.strRecognizationDescription}" Width="50" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/shapes.png"/>
                    <controls:DropDownToggleButton x:Name="btnFreeHandPolygon" Click="BtnFreeHandPolygon_Click" Header="{x:Static res:Resources.strPolygonButton}" ToolTip="{x:Static res:Resources.strPolygonToolTip}" Width="50">
                        <controls:DropDownToggleButton.LargeIcon>
                            <Viewbox Width="32" Height="32">
                                <Image Source="pack://application:,,,/SimpleJournal;component/resources/polygon.png"/>
                            </Viewbox>
                        </controls:DropDownToggleButton.LargeIcon>
                    </controls:DropDownToggleButton>
                    <controls:DropDownToggleButton x:Name="btnInsertPlot" Header="XY" Foreground="{DynamicResource BlackBrush}" Width="50" Click="btnCooardinateSystem_Click" ToolTip="{x:Static res:Resources.strInsertPlotToolTip}">
                        <controls:DropDownToggleButton.LargeIcon>
                            <Viewbox Width="32" Height="32">
                                <Canvas Width="48" Height="48" UseLayoutRounding="True" SnapsToDevicePixels="True">
                                    <Path Data="M 0 8 L 4 0 L 8 8 Z" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type controls:DropDownToggleButton}}, Path=Foreground}" Canvas.Left="1" Canvas.Top="1.125" />
                                    <Line Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type controls:DropDownToggleButton}}, Path=Foreground}" StrokeThickness="2" X1="5" X2="5" Y1="8" Y2="41" />
                                    <Line Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type controls:DropDownToggleButton}}, Path=Foreground}" StrokeThickness="2" X1="5" X2="36" Y1="40" Y2="40" />
                                    <Path Data="M 0 0 L 8 4 L 0 8 Z" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type controls:DropDownToggleButton}}, Path=Foreground}" Canvas.Left="34.625" Canvas.Top="35.875"/>
                                    <TextBlock Text="X" Canvas.Left="34" Canvas.Top="22" />
                                    <TextBlock Text="Y" Canvas.Left="10" Canvas.Top="-2" />
                                </Canvas>
                            </Viewbox>
                        </controls:DropDownToggleButton.LargeIcon>
                    </controls:DropDownToggleButton>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox x:Name="GroupPages" Header="{x:Static res:Resources.strPages}" KeyTip="S">
                    <controls:DropDownToggleButton x:Name="btnInsertNewPage" Click="BtnInsertNewPage_Click" Header="{x:Static res:Resources.strAddPage}" ToolTip="{x:Static res:Resources.strAddPageTooltip}" IsToggleable="False" Width="65">
                        <controls:DropDownToggleButton.LargeIcon>
                            <Viewbox Width="32" Height="32">
                                <Image x:Name="ButtonInsertNewPageIcon" Source="pack://application:,,,/SimpleJournal;component/resources/add.png"/>
                            </Viewbox>
                        </controls:DropDownToggleButton.LargeIcon>
                    </controls:DropDownToggleButton>
                    <controls:FluentToggleButtonRemovedToggle x:Name="btnDeletePage" Click="btnDeletePage_Click"  Header="{x:Static res:Resources.strDeletePage}" ToolTip="{x:Static res:Resources.strDeletePageTooltip}" Width="55" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/deletepage.png"/>
                    <controls:FluentToggleButtonRemovedToggle x:Name="btnClearPage" Click="btnClearPage_Click" Header="{x:Static res:Resources.strClearPage}" ToolTip="{x:Static res:Resources.strClearPageTooltip}" Width="55" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/clear.png"/>
                    <controls:FluentToggleButtonRemovedToggle x:Name="btnManagePages" Click="btnManagePages_Click"  Header="{x:Static res:Resources.strManagePage}" ToolTip="{x:Static res:Resources.strManagePageTooltip}" Width="60" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/editpage.png"/>

                    <!-- Make some space for the ComboBox-->
                    <Fluent:ComboBox Visibility="Hidden" />
                    <Fluent:ComboBox x:Name="cmbPages" Size="Large" Width="93" IsEditable="False" SelectionChanged="ComboBox_SelectionChanged" HorizontalContentAlignment="Center" />
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="{x:Static res:Resources.strPaste}" KeyTip="EI">
                <Fluent:RibbonTabItem.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Width="80" TextAlignment="Center" />
                    </DataTemplate>
                </Fluent:RibbonTabItem.HeaderTemplate>
                <Fluent:RibbonGroupBox Header="{x:Static res:Resources.strClipboard}" KeyTip="ZW" Width="100">
                    <Fluent:Button x:Name="btnInsertFromClipboard" Click="btnInsertFromClipboard_Click" Header="{x:Static res:Resources.strInsertImageOrText}" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/paste.png"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="{x:Static res:Resources.strSelection}" KeyTip="AU">
                    <Fluent:Button x:Name="btnCreateForm" Click="btnCreateForm_Click" Header="{x:Static res:Resources.strConvertToForm}" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/shapes.png"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="{x:Static res:Resources.strInsertNewObjects}" KeyTip="NE">
                    <Fluent:Button x:Name="btnInsertText" Click="btnInsertText_Click" Header="{x:Static res:Resources.strInsertText}" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/text.png"/>
                    <Fluent:Button x:Name="btnInsertDate" Click="btnInsertDate_Click" Header="{x:Static res:Resources.strInsertDate}" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/text.png"/>
                    <Fluent:Button x:Name="btnInsertImage" Click="btnInsertImage_Click" Header="{x:Static res:Resources.strInsertImage}" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/image.png"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="{x:Static res:Resources.strText}" KeyTip="TE">
                <Fluent:RibbonTabItem.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Width="50" TextAlignment="Center" />
                    </DataTemplate>
                </Fluent:RibbonTabItem.HeaderTemplate>
                <Fluent:RibbonGroupBox Header="{x:Static res:Resources.strTextRecognization}">
                    <Fluent:Button x:Name="btnTextDetection" Click="btnTextDetection_Click" Header="{x:Static res:Resources.strTextDectection}" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/textdetection.png"/>
                    <Fluent:Button x:Name="btnSearch" Click="btnSearch_Click" Header="{x:Static res:Resources.strTextSearch}" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/search.png"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="{x:Static res:Resources.strView}" KeyTip="AN">
                <Fluent:RibbonTabItem.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Width="50" TextAlignment="Center" />
                    </DataTemplate>
                </Fluent:RibbonTabItem.HeaderTemplate>
                <Fluent:RibbonGroupBox Header="{x:Static res:Resources.strSidepage}">
                    <Fluent:Button x:Name="btnDisplaySidebar" Click="btnDisplaySidebar_Click"  Header="{x:Static res:Resources.strDisplayObjects}" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/sidebar.png"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="{x:Static res:Resources.strZoom}">
                    <Fluent:ToggleButton x:Name="btnZoom100" Header="100%" Click="btnZoom100_Click" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/zoom.png"/>
                    <Fluent:ToggleButton x:Name="btnZoom120" Header="120%" Click="btnZoom120_Click" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/zoom.png"/>
                    <Fluent:ToggleButton x:Name="btnZoom150" Header="150%" Click="btnZoom150_Click" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/zoom.png"/>
                    <Fluent:ToggleButton x:Name="btnZoom180" Header="180%" Click="btnZoom180_Click" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/zoom.png"/>
                    <Fluent:ToggleButton x:Name="btnZoom200" Header="200%" Click="btnZoom200_Click" LargeIcon="pack://application:,,,/SimpleJournal;component/resources/zoom.png"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:Ribbon.ToolBarItems>
                <Fluent:Button Size="Small" Icon="pack://application:,,,/SimpleJournal;component/resources/help.png" x:Name="btnHelp" Click="BtnHelp_Click"/>
            </Fluent:Ribbon.ToolBarItems>
            <Fluent:Ribbon.QuickAccessItems>
                <Fluent:QuickAccessMenuItem x:Name="QuickAccessButtonNew" IsChecked="True">
                    <Fluent:Button Header="{x:Static res:Resources.strNewDocument}" Command="ApplicationCommands.New" Icon="pack://application:,,,/SimpleJournal;component/resources/add.png" />
                </Fluent:QuickAccessMenuItem>
                <Fluent:QuickAccessMenuItem x:Name="QuickAccessButtonSave" IsChecked="True">
                    <Fluent:Button Header="{x:Static res:Resources.strSave}" Command="ApplicationCommands.Save" Icon="pack://application:,,,/SimpleJournal;component/resources/save.png" />
                </Fluent:QuickAccessMenuItem>
                <Fluent:QuickAccessMenuItem x:Name="QuickAccessButtonUndo" IsChecked="True">
                    <Fluent:Button Header="{x:Static res:Resources.strUndo}" Command="ApplicationCommands.Undo" Icon="pack://application:,,,/SimpleJournal;component/resources/undo.png" />
                </Fluent:QuickAccessMenuItem>
                <Fluent:QuickAccessMenuItem x:Name="QuickAccessButtonRedo" IsChecked="True">
                    <Fluent:Button Header="{x:Static res:Resources.strRedo}" Command="ApplicationCommands.Redo" Icon="pack://application:,,,/SimpleJournal;component/resources/redo.png" />
                </Fluent:QuickAccessMenuItem>
                <Fluent:QuickAccessMenuItem x:Name="QuickAccessButtonPrint" IsChecked="True">
                    <Fluent:Button Header="{x:Static res:Resources.strPrintDocument}" Command="ApplicationCommands.Print" Icon="pack://application:,,,/SimpleJournal;component/resources/print.png" />
                </Fluent:QuickAccessMenuItem>
                <Fluent:QuickAccessMenuItem x:Name="QuickAccessButtonInsertImage" IsChecked="True">
                    <Fluent:Button Header="{x:Static res:Resources.strInsertImage}" Command="ApplicationCommands.Paste" Icon="pack://application:,,,/SimpleJournal;component/resources/add_image.png" />
                </Fluent:QuickAccessMenuItem>
                <Fluent:QuickAccessMenuItem x:Name="QuickAccessButtonInsertFromClipboard" IsChecked="True">
                    <Fluent:Button Header="{x:Static res:Resources.strInsertFromClipboard}" Command="local:Commands.InsertFromClipboard" Icon="pack://application:,,,/SimpleJournal;component/resources/insertimgfromc.png" />
                </Fluent:QuickAccessMenuItem>
            </Fluent:Ribbon.QuickAccessItems>
        </Fluent:Ribbon>
        <Grid Grid.Row="1">
            <Grid x:Name="pnlSidebar" Panel.ZIndex="1" HorizontalAlignment="Left" Width="200" Background="{DynamicResource Item.SidebarBackgroundColor}" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <DockPanel Grid.Row="0" HorizontalAlignment="Stretch">
                    <TextBlock Margin="5,0,0,0" FontWeight="Bold" Foreground="{DynamicResource BlackBrush}" VerticalAlignment="Center">
                        <Run Text="{x:Static res:Resources.strObjects}" />
                        <Run x:Name="TextObjectCounter" Text="0" />
                    </TextBlock>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button Margin="5" Width="30" Height="30" x:Name="btnDeleteSidebarItem" Click="btnDeleteSidebarItem_Click" ToolTip="{x:Static res:Resources.strRemoveObjectsDescription}">
                            <Button.Content>
                                <Image Source="resources/remove.png"/>
                            </Button.Content>
                        </Button>
                        <Button Margin="5" Width="30" Height="30" x:Name="ButtonBringToFront" Click="ButtonBringToFront_Click" ToolTip="{x:Static res:Resources.strBringToFront}">
                            <Button.Content>
                                <Image Source="resources/front.png"/>
                            </Button.Content>
                        </Button>
                        <Button HorizontalAlignment="Right" Margin="5" Width="30" Height="30" x:Name="btnSwitchSidebarOff" Click="btnSwitchSidebarOff_Click" ToolTip="{x:Static res:Resources.strCloseSidebar}">
                            <Button.Content>
                                <Image Source="resources/close.png"/>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </DockPanel>
                <controls:ListBoxScroll x:Name="pnlItems" Margin="2,2" Background="Transparent" ItemContainerStyle="{DynamicResource _ListBoxItemStyle}" Grid.Row="1" Grid.RowSpan="{Binding ElementName=pnlItems, Path=SelectedIndex, Converter={StaticResource indexToColumn}}" SelectionChanged="pnlItems_SelectionChanged" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SelectionMode="Multiple" />

                <StackPanel Grid.Row="2" Margin="0,5,0,0" Background="Transparent" Visibility="{Binding ElementName=pnlItems, Path=SelectedIndex, Converter={StaticResource indexToVisibilty}}">
                    <controls:ImageDesign Margin="0,5,0,0" x:Name="objImgSettings" OnChanged="ObjImgSettings_Changed" Visibility="Collapsed"/>
                    <controls:ShapeDesign Margin="0,5,0,0" x:Name="objShapeSettings" OnChanged="ObjShapeSettings_OnChanged_1" Visibility="Collapsed"/>
                    <controls:TextDesign Margin="0,5,0,0" x:Name="objTextSettings" OnChanged="ObjTextSettings_OnChanged" Visibility="Collapsed"/>
                </StackPanel>
            </Grid>
            <controls:AnimatedScrollViewer CanContentScroll="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"  x:Name="mainScrollView" ScrollChanged="mainScrollView_ScrollChanged" SnapsToDevicePixels="True" UseLayoutRounding="True">
                <StackPanel x:Name="pages" Orientation="Vertical" Background="Transparent" PreviewMouseDown="Pages_MouseDown"  PreviewMouseUp="Pages_PreviewMouseUp" MouseLeave="Pages_MouseLeave" SnapsToDevicePixels="True" UseLayoutRounding="True" />
            </controls:AnimatedScrollViewer>
        </Grid>
        <Grid Grid.Row="2">
            <Fluent:StatusBar x:Name="MainStatusBar" Visibility="Collapsed">
                <Fluent:StatusBarItem Title="Speichern" HorizontalAlignment="Left">
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <TextBlock x:Name="TextStatusBar" />
                        <ProgressBar Width="200" Margin="3" IsIndeterminate="True" />
                    </StackPanel>
                </Fluent:StatusBarItem>
            </Fluent:StatusBar>
        </Grid>
    </Grid>
</Fluent:RibbonWindow>